#!/bin/bash
# create new branch following GCA

FEATURE_BRANCH=$1
VERSION=$2

if [[ "x$FEATURE_BRANCH" = "x" ]];
then
  echo "Missing FEATURE_BRANCH parameter"
  echo "$0 [JIRA TICKET] [VERSION]"
  echo "$0 PXC-3092 5.7"
  exit 1
fi

if [[ "$VERSION" = "" ]];
then
  VERSION="5.6"
elif [ "$VERSION" != "2.4" ] && [ "$VERSION" != "5.6" ] && [ "$VERSION" != "5.7" ] && [ "$VERSION" != "8.0" ] && [ "$VERSION" != "trunk" ]
then
  echo "Minor Version ${VERSION} is invalid"
  exit 1;
fi

function create_branch()
{
  case "$VERSION" in
    2.4)
      echo "Creating ${VERSION} $FEATURE_BRANCH branch"
      git checkout ${VERSION}
      local gca_commit=$(git show `git rev-list ${VERSION} ^origin/8.0 --first-parent --topo-order | tail -1`^ | head -1 | awk '{print $2}')
      ;;
    5.6)
      echo "Creating 5.6 $FEATURE_BRANCH branch"
      git checkout 5.6
      local gca_commit=$(git show `git rev-list 5.6 ^origin/8.0 --first-parent --topo-order | tail -1`^ | head -1 | awk '{print $2}')
      ;;
    5.7)
      echo "Creating 5.7 $FEATURE_BRANCH branch"
      local gca_commit=$(git show `git rev-list 5.7 ^origin/8.0 --first-parent --topo-order | tail -1`^ | head -1 | awk '{print $2}')
      ;;
    8.0)
      echo "Creating 8.0 $FEATURE_BRANCH branch"
      local gca_commit=$(git show `git rev-list ${VERSION} ^origin/trunk --first-parent --topo-order | tail -1`^ | head -1 | awk '{print $2}')
      ;;
  esac
  git checkout -b "${FEATURE_BRANCH}-${VERSION}" ${gca_commit}
}

create_branch
